; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "grandpascript"
#define MyAppVersion "1.0"
#define MyAppPublisher "Todd Mitchell"
#define MyAppExeName "grandpascript.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={YOUR GUID GOES HERE}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={autopf}\{#MyAppName}
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=grandpascript_setup_1.0
Compression=lzma
SolidCompression=yes
WizardStyle=modern
; PUT YOUR PATH HERE
WizardImageFile="C:\YOUR\PATH\GOES\HERE\grandpa.bmp"
WizardSmallImageFile="C:\YOUR\PATH\GOES\HERE\grandpa.bmp"
AlwaysRestart=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "C:\YOUR\PATH\GOES\HERE\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"

[Registry]
; Write path to registry so the user does not have to navigate to the folder where grandpascript is located every time he wants to use this CLI app.
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueName: "Path"; ValueType: "string"; ValueData: "{app};{olddata}"; Check: NotOnPathAlready(); Flags: preservestringtype;

[Code]
function NotOnPathAlready(): Boolean;
var
  Dir, Path: String;
begin
  Log('Checking if grandpascript dir is already on the %PATH%');
  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', 'Path', Path) then
  begin // Successfully read the value
    Log('HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment\PATH = ' + Path);
    Dir := ExpandConstant('{app}');
    Log('Looking for grandpascript dir in %PATH%: ' + Dir + ' in ' + Path);
    if Pos(LowerCase(Dir), Lowercase(Path)) = 0 then
    begin
      Log('Did not find grandpascript dir in %PATH% so will add it');
      Result := True;
    end
    else
    begin
      Log('Found grandpascript dir in %PATH% so will not add it again');
      Result := False;
    end
  end
  else // The key probably doesn't exist
  begin
    Log('Could not access HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment\PATH so assume it is ok to add it');
    Result := True;
  end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  Dir, Path: String;
begin
  if (CurUninstallStep = usPostUninstall)
     and (RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', 'PATH', Path)) then
  begin
    Dir := ExpandConstant('{app}');
    if Pos(LowerCase(Dir) + ';', Lowercase(Path)) <> 0 then
    begin
      StringChange(Path, Dir + ';', '');
      RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', 'PATH', Path);
    end;
  end;
end;